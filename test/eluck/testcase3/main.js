// Generated by CoffeeScript 1.7.1
(function() {
  var fixBuffer, randomToken, root, testcase, wtf;

  console.log('This test case reveals an issue in server side profiling.\n', '  The issue: All profiles after the first one are broken.\n', '  How to run the testcase:\n', '    1. Launch this script "node main.js"\n', '    2. The script will create two trace files: the first one - correct, the second - broken (cannot be loaded by viewer)\n');

  root = '../../..';

  wtf = require("" + root + "/build-out/wtf_node_js_compiled");

  randomToken = require('crypto').randomBytes(8).toString('hex');

  testcase = function(name) {
    var array, buffer, n, scope, snapshotName, _fn, _i;
    console.log("running " + name);
    wtf.trace.node.start();
    scope = wtf.trace.enterScope(name);
    _fn = function() {};
    for (n = _i = 0; _i <= 100000000; n = ++_i) {
      _fn();
    }
    wtf.trace.leaveScope(scope);
    console.log("saving snapshot to buffer");
    array = [];
    wtf.trace.snapshot(array);
    snapshotName = "" + __dirname + "/" + name + "_" + randomToken + ".wtf-trace";
    console.log("flushing snapshot to file: " + snapshotName);
    buffer = fixBuffer(array[0].buffer_);
    return require('fs').writeFileSync(snapshotName, buffer);
  };

  fixBuffer = function(buffer) {
    var index, value, _i, _len, _ref;
    _ref = [0xef, 0xbe, 0xad, 0xde, 0x00, 0x44, 0x21, 0xe8, 0x0a, 0x00, 0x00, 0x00];
    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
      value = _ref[index];
      console.log(buffer[index]);
      buffer[index] = value;
      console.log(buffer[index]);
      console.log('');
    }
    return buffer;
  };

  testcase('testcase1');

  setTimeout(function() {
    wtf.trace.stop();
    testcase('testcase2');
    return setTimeout(function() {
      wtf.trace.stop();
      console.log('exiting normally');
      return process.exit(0);
    }, 5000);
  }, 5000);

}).call(this);

//# sourceMappingURL=main.map
